name: C/C++ CI

on:
  pull_request:
    branches: 
      - main
  push:
    branches: 
      - main

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:

    strategy:
      matrix:
        external-gtest: [ YES, NO ]
        os: [ ubuntu-latest, ubuntu-22.04 ]

    runs-on: ${{ matrix.os }}
    name: Build with external_gtest=${{ matrix.external-gtest }} on ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: install deps
      run: |
        sudo apt-get update && sudo apt-get install sqlite3 libsqlite3-dev cmake uuid-dev libgtest-dev

        git clone https://github.com/nlohmann/json.git && \
        cd json && mkdir build && \ cd build && \
        cmake .. && \
        make -j `nproc` install

        git clone https://github.com/pboettch/json-schema-validator.git && \
        cd json-schema-validator && mkdir build && \ cd build && \
        cmake .. && \
        make -j `nproc` install
        

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DLOTMAN_BUILD_UNITTESTS=on -DLOTMAN_EXTERNAL_GTEST=${{ matrix.external-gtest }}

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE --verbose
